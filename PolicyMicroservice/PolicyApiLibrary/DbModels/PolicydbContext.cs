// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

#nullable disable

namespace PolicyApiLibrary.DbModels
{
    public partial class PolicyDbContext : DbContext
    {
        public PolicyDbContext()
        {
        }

        public PolicyDbContext(DbContextOptions<PolicyDbContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Policy> Policies { get; set; }
        public virtual DbSet<PolicyType> PolicyTypes { get; set; }
        public virtual DbSet<PolicyUserType> PolicyUserTypes { get; set; }
        public virtual DbSet<UserType> UserTypes { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS");

            modelBuilder.Entity<Policy>(entity =>
            {
                entity.Property(e => e.ComapnyName).IsUnicode(false);

                entity.Property(e => e.PolicyId).IsUnicode(false);

                entity.Property(e => e.PolicyName).IsUnicode(false);

                entity.Property(e => e.PolicyTypeId).IsUnicode(false);

                entity.HasOne(d => d.PolicyType)
                    .WithMany(p => p.Policies)
                    .HasForeignKey(d => d.PolicyTypeId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Policy_PolicyType");
            });

            modelBuilder.Entity<PolicyType>(entity =>
            {
                entity.Property(e => e.Id).IsUnicode(false);

                entity.Property(e => e.TypeName).IsUnicode(false);
            });

            modelBuilder.Entity<PolicyUserType>(entity =>
            {
                entity.HasKey(e => new { e.PolicyId, e.UserTypeId });

                entity.HasOne(d => d.Policy)
                    .WithMany(p => p.PolicyUserTypes)
                    .HasForeignKey(d => d.PolicyId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PolicyUserType_Policy");

                entity.HasOne(d => d.UserType)
                    .WithMany(p => p.PolicyUserTypes)
                    .HasForeignKey(d => d.UserTypeId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PolicyUserType_UserType");
            });

            modelBuilder.Entity<UserType>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.IncomePerYear).IsUnicode(false);

                entity.Property(e => e.TypeName).IsUnicode(false);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}